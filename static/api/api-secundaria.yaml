openapi: 3.0.0
info:
  title: API Secundária
  description: Documentação da API secundária do projeto
  version: 1.0.0
  contact:
    name: Suporte da API Secundária
    email: suporte-secundaria@exemplo.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api-secundaria.exemplo.com/v1
    description: Servidor de produção da API secundária
  - url: https://staging-api-secundaria.exemplo.com/v1
    description: Servidor de staging da API secundária

paths:
  /products:
    get:
      tags:
        - Produtos
      summary: Listar produtos
      description: Retorna uma lista de todos os produtos
      parameters:
        - name: category
          in: query
          description: Categoria do produto
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Número da página
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Lista de produtos retornada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Parâmetros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Produtos
      summary: Criar produto
      description: Cria um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/{id}:
    get:
      tags:
        - Produtos
      summary: Obter produto por ID
      description: Retorna os dados de um produto específico
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          description: ID único do produto
          example: 1
        name:
          type: string
          description: Nome do produto
          example: "Produto Exemplo"
        description:
          type: string
          description: Descrição do produto
          example: "Descrição do produto exemplo"
        price:
          type: number
          format: float
          description: Preço do produto
          example: 99.99
        category:
          type: string
          description: Categoria do produto
          example: "Eletrônicos"
        createdAt:
          type: string
          format: date-time
          description: Data de criação do produto
          example: "2023-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Data da última atualização
          example: "2023-01-01T00:00:00Z"
      required:
        - id
        - name
        - price
        - category
        - createdAt

    CreateProductRequest:
      type: object
      properties:
        name:
          type: string
          description: Nome do produto
          example: "Produto Exemplo"
        description:
          type: string
          description: Descrição do produto
          example: "Descrição do produto exemplo"
        price:
          type: number
          format: float
          description: Preço do produto
          example: 99.99
        category:
          type: string
          description: Categoria do produto
          example: "Eletrônicos"
      required:
        - name
        - price
        - category

    Pagination:
      type: object
      properties:
        page:
          type: integer
          description: Página atual
          example: 1
        limit:
          type: integer
          description: Itens por página
          example: 10
        total:
          type: integer
          description: Total de itens
          example: 100
        totalPages:
          type: integer
          description: Total de páginas
          example: 10

    Error:
      type: object
      properties:
        error:
          type: string
          description: Código do erro
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: Mensagem de erro
          example: "Os dados fornecidos são inválidos"
        details:
          type: object
          description: Detalhes adicionais do erro
          example:
            field: "name"
            reason: "Nome é obrigatório"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT para autenticação

security:
  - bearerAuth: []
